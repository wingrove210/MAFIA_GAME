/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VoteImport } from './routes/vote'
import { Route as RegisterImport } from './routes/register'
import { Route as ProfileImport } from './routes/profile'
import { Route as GameRoomImport } from './routes/game-room'
import { Route as AuthImport } from './routes/auth'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const VoteRoute = VoteImport.update({
  id: '/vote',
  path: '/vote',
  getParentRoute: () => rootRoute,
} as any)

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const GameRoomRoute = GameRoomImport.update({
  id: '/game-room',
  path: '/game-room',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/game-room': {
      id: '/game-room'
      path: '/game-room'
      fullPath: '/game-room'
      preLoaderRoute: typeof GameRoomImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/vote': {
      id: '/vote'
      path: '/vote'
      fullPath: '/vote'
      preLoaderRoute: typeof VoteImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/game-room': typeof GameRoomRoute
  '/profile': typeof ProfileRoute
  '/register': typeof RegisterRoute
  '/vote': typeof VoteRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/game-room': typeof GameRoomRoute
  '/profile': typeof ProfileRoute
  '/register': typeof RegisterRoute
  '/vote': typeof VoteRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/game-room': typeof GameRoomRoute
  '/profile': typeof ProfileRoute
  '/register': typeof RegisterRoute
  '/vote': typeof VoteRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/auth' | '/game-room' | '/profile' | '/register' | '/vote'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth' | '/game-room' | '/profile' | '/register' | '/vote'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/game-room'
    | '/profile'
    | '/register'
    | '/vote'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRoute
  GameRoomRoute: typeof GameRoomRoute
  ProfileRoute: typeof ProfileRoute
  RegisterRoute: typeof RegisterRoute
  VoteRoute: typeof VoteRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRoute,
  GameRoomRoute: GameRoomRoute,
  ProfileRoute: ProfileRoute,
  RegisterRoute: RegisterRoute,
  VoteRoute: VoteRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/game-room",
        "/profile",
        "/register",
        "/vote"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/game-room": {
      "filePath": "game-room.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/vote": {
      "filePath": "vote.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
